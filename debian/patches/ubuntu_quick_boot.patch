Description: Bypass menu unless other OSes are installed or Shift is pressed
 If other operating systems are installed, then automatically unhide the
 menu. Otherwise, if GRUB_HIDDEN_TIMEOUT is 0, then use keystatus if
 available to check whether Shift is pressed. If it is, show the menu,
 otherwise boot immediately. If keystatus is not available, then fall back
 to a short delay interruptible with Escape.
 .
 This may or may not remain Ubuntu-specific, although it's not obviously
 wanted upstream.  It implements a requirement of
 https://wiki.ubuntu.com/DesktopExperienceTeam/KarmicBootExperienceDesignSpec#Bootloader.
Author: Colin Watson <cjwatson@ubuntu.com>
Forwarded: no
Last-Update: 2013-12-04

Index: b/util/grub.d/30_os-prober.in
===================================================================
--- a/util/grub.d/30_os-prober.in
+++ b/util/grub.d/30_os-prober.in
@@ -23,6 +23,19 @@
 
 . "@datadir@/grub/grub-mkconfig_lib"
 
+found_other_os=
+
+adjust_timeout () {
+  if [ "x${found_other_os}" != "x" ]; then
+    cat << EOF
+set timeout_style=menu
+if [ "\${timeout}" = 0 ]; then
+  set timeout=10
+fi
+EOF
+  fi
+}
+
 if [ "x${GRUB_DISABLE_OS_PROBER}" = "xtrue" ]; then
   exit 0
 fi
@@ -39,6 +52,7 @@
 fi
 
 osx_entry() {
+	found_other_os=1
         cat << EOF
 menuentry "${LONGNAME} (${2}-bit) (on ${DEVICE})" --class osx --class darwin --class os {
 EOF
@@ -104,6 +118,7 @@
   case ${BOOT} in
     chain)
 
+      found_other_os=1
       cat << EOF
 menuentry "${LONGNAME} (on ${DEVICE})" --class windows --class os {
 EOF
@@ -146,6 +161,7 @@
 	  LINITRD="${LINITRD#/boot}"
 	fi
 
+	found_other_os=1
         cat << EOF
 menuentry "${LLABEL} (on ${DEVICE})" --class gnu-linux --class gnu --class os {
 EOF
@@ -173,6 +189,7 @@
       osx_entry xnu_kernel64 64
     ;;
     hurd)
+      found_other_os=1
       cat << EOF
 menuentry "${LONGNAME} (on ${DEVICE})" --class hurd --class gnu --class os {
 EOF
@@ -202,3 +219,5 @@
     ;;
   esac
 done
+
+adjust_timeout
